name: Main CI Pipeline
on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SQLITE_PATH: ${{ github.workspace }}/genomes.db

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ libsqlite3-dev

    - name: Configure project
      run: cmake -B build -S .

    - name: Build project
      run: cmake --build build

    - name: Run basic test
      run: |
        cd build
        ./main_app
        # Ellenőrizzük, létrejött-e az adatbázis
        if [ -f "$SQLITE_PATH" ]; then
          echo "✅ Database created successfully"
        else
          echo "❌ Database creation FAILED"
          exit 1
        finame: Build and Test
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libsqlite3-dev g++
        
    - name: Configure
      run: cmake -B build -S .
      
    - name: Build
      run: cmake --build build
      
    - name: Test database
      run: |
        cd build
        ./main_app
        [[ -f genomes.db ]] && echo "Database created!" || exit 1name: Build and Test
on: [push, pull_request]

jobs:
  cpp-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ libsqlite3-dev
        
    - name: Configure and build
      run: |
        cmake -B build -S .
        cmake --build build --config Release
        
    - name: Run tests
      working-directory: ./build
      run: ./main_app  # Alapvető működés tesztelése- name: Download test data
  run: |
    curl -L https://example.com/test_genomes.fa -o database/test_data.fa
    
- name: Run functional tests
  working-directory: build
  run: ./run_tests --data-path ../database/test_data.faname: Build and Test
on: [push, pull_request]

jobs:
  cpp-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get install -y cmake g++

    - name: Configure
      run: cmake -B build -S .

    - name: Build
      run: cmake --build build --config Release

    - name: Run tests
      working-directory: ./build
      run: ctest --verbose
